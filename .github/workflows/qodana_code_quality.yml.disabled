name: Qodana
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
      - 'releases/*'

jobs:
  qodana:
    runs-on: ubuntu-latest
    env:
      TEST_PROJECT_FILE: test/UnitTests/UnitTests.csproj
      TEST_PROJECT_COVERLET_SETTINGS: test/UnitTests/coverlet.qodana.runsettings
    permissions:
      contents: write
      pull-requests: write
      checks: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}  # to check out the actual pull request commit, not the merge commit
          fetch-depth: 0  # a full history is required for pull request analysis

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Restore SigningKey
        run: echo "${{ secrets.STRONG_NAME_KEY_B64 }}" | base64 -d > DhKey.snk

      - name: Build solution
        run: dotnet build --configuration Debug --no-incremental

      - name: Run Unit Tests
        working-directory: ${{ github.workspace }}
        run: dotnet test $TEST_PROJECT_FILE --no-build --logger "trx;logFileName=tests_results.trx" --collect:"XPlat Code Coverage" --settings $TEST_PROJECT_COVERLET_SETTINGS

      - name: List all coverage.json files with full path
        run: find ${{ github.workspace }} -type f -name '*coverage*'

      - name: Copy all coverage.json files from TestResults subfolders to .qodana/code-coverage
        run: |
          mkdir -p .qodana/code-coverage
          find ./test/UnitTests/TestResults -type f -name 'coverage*' -exec cp {} .qodana/code-coverage/ \;

      - name: List all coverage.json files with full path (2)
        run: find ${{ github.workspace }} -type f -name '*coverage*'

      - name: Archive coverage data for Qodana
        uses: actions/upload-artifact@v4
        with:
          name: coverage.json
          path: .qodana/code-coverage
          overwrite: true
          compression-level: 0
          include-hidden-files: true

      # - name: Install Qodana CLI
      #   run: curl -fsSL https://jb.gg/qodana-cli/install | bash

      # - name: Init Qodana CLI
      #   run: qodana init

      # - name: Help scan Qodana CLI
      #   run: qodana scan --help

      # - name: Run scan Qodana CLI
      #   run: qodana scan --baseline qodana.sarif.json --baseline-include-absent

      # - name: View Qodana Report
      #   run: qodana view

      # - name: Send Qodana Report to Cloud
      #   env:
      #     QODANA_TOKEN: ${{ secrets.QODANA_TOKEN_1670587391 }}
      #     QODANA_ENDPOINT: 'https://qodana.cloud'
      #   run: qodana send

      - name: 'Qodana Scan'
        uses: JetBrains/qodana-action@v2025.1
        with:
          pr-mode: false
          args: |
            --baseline,qodana.sarif.json,
            --baseline-include-absent
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN_1670587391 }}
          QODANA_ENDPOINT: 'https://qodana.cloud'
          
      - name: Clean up Signing Key
        if: always()
        run: rm -f DhKey.snk
